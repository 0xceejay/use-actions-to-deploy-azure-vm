name: Azure VM Deployment

on:
  push:
    branches:
      - main  # or the branch you want to trigger this on

jobs:
  deploy-to-azure:
    runs-on: ubuntu-latest

    env:
      AZURE_RESOURCE_GROUP: test
      VM_NAME: myVM
      DOCKER_IMAGE: sdharmarajah/animated-drawings:latest
      API_PORT: 8080
      DOMAIN_NAME: mydomain.com
      VM_SIZE: Standard_D2s_v3

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create Azure VM
      env:
        SSH_PUBLIC_KEY: ${{ secrets.AZURE_VM_SSH_PUBLIC_KEY }}
      run: |
        az vm create \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name ${{ env.VM_NAME }} \
          --image Ubuntu2204 \
          --size ${{ env.VM_SIZE }} \
          --admin-username azureuser \
          --ssh-key-values "$SSH_PUBLIC_KEY" \
          --public-ip-sku Standard \
          --public-ip-address-allocation static

    - name: Configure Network Security Group
      run: |
        az network nsg create \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name ${VM_NAME}-nsg

        az network nsg rule create \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --nsg-name ${VM_NAME}-nsg \
          --name AllowAPI \
          --protocol tcp \
          --priority 1000 \
          --destination-port-range ${{ env.API_PORT }} \
          --access Allow

        az network nic update \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name ${VM_NAME}VMNic \
          --network-security-group ${VM_NAME}-nsg

    - name: Install Docker on VM
      run: |
        az vm extension set \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --vm-name ${{ env.VM_NAME }} \
          --name CustomScript \
          --publisher Microsoft.Azure.Extensions \
          --settings '{"fileUris": ["https://raw.githubusercontent.com/0xceejay/use-actions-to-deploy-azure-vm/blob/main/install-docker.sh"], "commandToExecute": "sudo bash install-docker.sh"}'

    - name: Deploy Docker image on VM
      run: |
        az vm run-command invoke \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name ${{ env.VM_NAME }} \
          --command-id RunShellScript \
          --scripts "docker run -d -p ${{ env.API_PORT }}:${{ env.API_PORT }} ${{ env.DOCKER_IMAGE }}"

    - name: Get Public IP
      run: |
        PUBLIC_IP=$(az vm show \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name ${{ env.VM_NAME }} \
          --show-details \
          --query publicIps \
          --output tsv)
        echo "Public IP: $PUBLIC_IP"
        echo "public_ip=$PUBLIC_IP" >> $GITHUB_OUTPUT

    - name: Output DNS instructions
      run: |
        echo "Use your DNS provider's interface or API to point ${{ env.DOMAIN_NAME }} to ${{ steps.get_ip.outputs.public_ip }}"